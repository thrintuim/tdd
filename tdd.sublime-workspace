{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"de",
				"density\tparam"
			],
			[
				"notid",
				"notidvalue"
			],
			[
				"newsty",
				"newstyle2"
			],
			[
				"newst",
				"newstyle1"
			],
			[
				"current",
				"currentSource"
			],
			[
				"selected",
				"selectedOptions"
			],
			[
				"other",
				"otherselected"
			],
			[
				"trade",
				"tradeStuff"
			],
			[
				"world",
				"worldEl"
			],
			[
				"trad",
				"tradeStuff"
			],
			[
				"value",
				"value-of"
			],
			[
				"tra",
				"tradeClassifications"
			],
			[
				"Va",
				"Va"
			],
			[
				"class",
				"classifications\tstatement"
			],
			[
				"deter",
				"determineTradeBenefits"
			],
			[
				"tclass",
				"tclassEl\tstatement"
			],
			[
				"sub",
				"substring"
			],
			[
				"stroke",
				"stroke-width"
			],
			[
				"name",
				"namespace"
			],
			[
				"va",
				"value-of"
			],
			[
				"col",
				"columnWidth"
			],
			[
				"y",
				"yValue"
			],
			[
				"row",
				"hexRow"
			],
			[
				"colu",
				"columnNumber"
			],
			[
				"na",
				"navalBase"
			],
			[
				"planet",
				"planetAtmo\tstatement"
			],
			[
				"plane",
				"planetPop\tstatement"
			],
			[
				"convert",
				"convertFromHex\tfunction"
			],
			[
				"conver",
				"convertFromHex\tfunction"
			],
			[
				"plaen",
				"planetSize"
			],
			[
				"con",
				"convertFromHex\tfunction"
			],
			[
				"re",
				"result"
			],
			[
				"determ",
				"determineTechLevel\tfunction"
			],
			[
				"star",
				"starPort\tstatement"
			],
			[
				"asci",
				"ascii_uppercase"
			],
			[
				"u",
				"ascii_uppercase"
			],
			[
				"pl",
				"planetGovt\tstatement"
			],
			[
				"plante",
				"planetHydro\tstatement"
			],
			[
				"determine",
				"determineLawLevel\tfunction"
			],
			[
				"determinePlan",
				"determinePopulation\tfunction"
			],
			[
				"plan",
				"planetSize\tparam"
			],
			[
				"ro",
				"rolld6\tfunction"
			],
			[
				"plaent",
				"planetGovt\tparam"
			],
			[
				"pla",
				"planetGovt\tparam"
			],
			[
				"sta",
				"starPortValue\tparam"
			],
			[
				"starPort",
				"starPortValue"
			],
			[
				"a",
				"ascii_uppercase\tstatement"
			],
			[
				"roll",
				"roll2d6\tfunction"
			],
			[
				"worl",
				"worldExist"
			],
			[
				"determi",
				"determineNavalBase"
			],
			[
				"wolrd",
				"worldExist"
			],
			[
				"int",
				"intArray"
			],
			[
				"def",
				"default_namespace"
			],
			[
				"mi",
				"milliseconds\tparam"
			],
			[
				"new",
				"newbegin"
			],
			[
				"content",
				"contentandfile"
			],
			[
				"remo",
				"removeDuplicateId\tfunction"
			],
			[
				"remove",
				"removeElement\tfunction"
			],
			[
				"list",
				"listOfStuff\tstatement"
			],
			[
				"from",
				"fromstring\tstatement"
			],
			[
				"Exc",
				"except\tkeyword"
			],
			[
				"Elem",
				"ElementTree\tclass"
			],
			[
				"fin",
				"findall\tfunction"
			],
			[
				"conte",
				"contentGrabbed"
			],
			[
				"html",
				"htmlgrab\tmodule"
			],
			[
				"sort",
				"sortStart"
			],
			[
				"try",
				"try\tTry/Except/Else"
			],
			[
				"split",
				"splitext\tfunction"
			],
			[
				"norm",
				"normpath\tfunction"
			],
			[
				"Element",
				"ElementTree\tmodule"
			],
			[
				"yVal",
				"yValue\tstatement"
			],
			[
				"com",
				"complex\tclass"
			],
			[
				"creat",
				"createCC\tfunction"
			],
			[
				"In",
				"Interpreter\timport"
			],
			[
				"coord",
				"coord2\tstatement"
			],
			[
				"get",
				"getSVGCoord\tfunction"
			],
			[
				"svg",
				"SVGorigin"
			],
			[
				"SVG",
				"SVGCoordinate\tclass"
			],
			[
				"Constr",
				"constructSVGBody"
			],
			[
				"Construc",
				"constructNumberline"
			],
			[
				"Eleme",
				"ElementTree\tmodule"
			],
			[
				"SVGPath",
				"SVGPath\tclass"
			],
			[
				"attr",
				"attribs\tclass"
			],
			[
				"__",
				"__dir__\tfunction"
			],
			[
				"defs",
				"defsDict"
			],
			[
				"nl",
				"nlParams\tstatement"
			],
			[
				"include",
				"includeDefs"
			],
			[
				"car",
				"cartesianGraph"
			],
			[
				"app",
				"appendDefs\tstatement"
			],
			[
				"num",
				"numParams\tstatement"
			],
			[
				"angle",
				"angleDiagram"
			],
			[
				"number",
				"numberLine"
			],
			[
				"error",
				"error_message"
			],
			[
				"err",
				"error_message"
			],
			[
				"file",
				"filePath\tstatement"
			],
			[
				"sublime",
				"sublime_plugin\tmodule"
			],
			[
				"des",
				"defsDict\tstatement"
			],
			[
				"cart",
				"cartesianGraph\tmodule"
			],
			[
				"move",
				"moveOrLine\tfunction"
			],
			[
				"prio",
				"priorCoord"
			],
			[
				"create",
				"createCurves\tfunction"
			],
			[
				"path",
				"pathElement\tstatement"
			],
			[
				"crea",
				"createPiecePath\tfunction"
			],
			[
				"previous",
				"previousCoords\tstatement"
			],
			[
				"appe",
				"appendLine\tfunction"
			],
			[
				"next",
				"nextLineY"
			],
			[
				"pri",
				"priorCoord\tparam"
			],
			[
				"start",
				"startCoords\tstatement"
			],
			[
				"eva",
				"evaluator"
			],
			[
				"startC",
				"startCoordY"
			],
			[
				"eval",
				"evaluator\tparam"
			],
			[
				"assi",
				"assignLines\tfunction"
			],
			[
				"line",
				"linesPerPiece"
			],
			[
				"total",
				"totalSpace\tstatement"
			],
			[
				"space",
				"spaceBetween\tstatement"
			],
			[
				"determien",
				"determineCurvePieces\tfunction"
			],
			[
				"curve",
				"curvePieces\tstatement"
			],
			[
				"end",
				"endPoints\tstatement"
			],
			[
				"dimes",
				"dimensions\tparam"
			],
			[
				"eal",
				"evaluator\tparam"
			],
			[
				"find",
				"findCoord\tfunction"
			],
			[
				"out",
				"outOfBounds\tstatement"
			],
			[
				"dim",
				"dimensions\tparam"
			],
			[
				"exp",
				"expression\tstatement"
			],
			[
				"bound",
				"boundCoords\tstatement"
			],
			[
				"Find",
				"findCoord\tfunction"
			],
			[
				"ex",
				"expression\tstatement"
			],
			[
				"xV",
				"xValuesOutOfBounds\tstatement"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				"Run"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 130.0,
		"last_filter": "show",
		"selected_items":
		[
			[
				"show",
				"Anaconda: Show error list"
			],
			[
				"svg",
				"SVG Creation: construct JSON"
			],
			[
				"",
				"Anaconda: Show error list"
			],
			[
				"build ",
				"Build With: C++ Single File - Run"
			],
			[
				"err",
				"SublimeREPL: R"
			],
			[
				"depened",
				"Package Control: Satisfy Dependencies"
			],
			[
				"error",
				"Anaconda: Show error list"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"pack sa",
				"Package Control: Satisfy Dependencies"
			],
			[
				"show err",
				"Anaconda: Show error list"
			],
			[
				"sublimerepl py",
				"SublimeREPL: Python"
			],
			[
				"SUBlimerepl py",
				"SublimeREPL: Python"
			],
			[
				"Anacond show",
				"Anaconda: Show error list"
			],
			[
				"SublimeREPL: Python - RUN",
				"SublimeREPL: Python - RUN current file"
			],
			[
				"SublimeREPL: Python",
				"SublimeREPL: Python"
			],
			[
				"SublimeREPL",
				"SublimeREPL: Python - RUN current file"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"in",
				"Package Control: Install Package"
			]
		],
		"width": 417.0
	},
	"console":
	{
		"height": 298.0,
		"history":
		[
			"for num in range(1, 100, 2n+1):",
			"height/2",
			"height = 50*(math.cos(math.radians(30)))",
			"50*(math.cos(math.radians(30)))",
			"50*(math.cos(math.radian(30)))",
			"50*(math.cos(rad(30)))",
			"50*(math.cos(math.rad(30)))",
			"import math",
			"50*(cos(rad(30)))",
			"thing",
			"thing = thing[:-1]",
			"thing[-1]",
			"thing = \"lsdkjfslkjflskj\"",
			"print(range(0,80))",
			"range(0,80)",
			"range(\"A\",\"Z\")",
			"sadlfkj",
			"thing.ham = 3",
			"et.tostring(thing)",
			"thing = et.Element(\"thing\")",
			"import xml.etree.ElementTree as et",
			"tuple(this)",
			"this",
			"this = \"(2,1)\"",
			"this = \"(2,1)",
			"this",
			"view.run_command(\"test\")",
			"view.run_command(\"Test\")",
			"view.run_command(\"svgjson_construct\")",
			"view.run_command(\"Test\")",
			"view.run_command(\"test\")",
			"view.run_command(\"svgjson_construct\")",
			"sublime.run_command(Svgjson_Construct)",
			"sublime.run_command(svgjson_construct)",
			"run_command(svgjson_construct)",
			"sublime.version()",
			"this.version()",
			"version()",
			"version",
			"--version",
			"python -V",
			"python.version()",
			"sublime.version()",
			"sublime.version(0",
			"from scipy.optimize import fmin",
			"grep -R --include=\"*.sublime-menu\" \"\\\"mnemonic\\\": \\\"w\\\"\"",
			"view.run_command(\"svgjson_construct\")",
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/doug/tdd"
	],
	"file_history":
	[
		"/home/doug/Dropbox/Traveller Subsector Generation/junk.html",
		"/home/doug/Dropbox/Traveller Subsector Generation/sampleSVG.html",
		"/home/doug/Dropbox/Traveller Subsector Generation/TheAssEndOfNowhere.html",
		"/home/doug/Dropbox/Traveller Subsector Generation/subsectorXMLtrasformation.xsl",
		"/home/doug/Dropbox/Traveller Subsector Generation/sample3.xml",
		"/home/doug/Dropbox/Traveller Subsector Generation/tradeSelection.js",
		"/home/doug/Dropbox/Traveller Subsector Generation/sample2.xml",
		"/home/doug/Dropbox/Traveller Subsector Generation/planetGenerator.py",
		"/home/doug/Dropbox/Traveller Subsector Generation/subsectorXMLGenerator.py",
		"/home/doug/Dropbox/Traveller Subsector Generation/sample.xml",
		"/home/doug/dealy.json",
		"/home/doug/.config/sublime-text-3/Packages/HTML-CSS-JS Prettify/.jsbeautifyrc",
		"/home/doug/Dropbox/Traveller Subsector Generation/travellerSubSectorGeneration.sublime-project",
		"/home/doug/Desktop/xorg.config",
		"/home/doug/.wine/drive_c/Program Files (x86)/Suns/EMPEROR.REG",
		"/home/doug/.wine/userdef.reg",
		"/home/doug/.wine/user.reg",
		"/home/doug/.wine/drive_c/Program Files (x86)/Suns/DAT/EFS.INI",
		"/home/doug/Desktop/EFS.INI",
		"/home/doug/Desktop/testingPlugin.py",
		"/home/doug/Desktop/testing.py",
		"/home/doug/Desktop/testingPage.html",
		"/home/doug/Desktop/df_linux/df",
		"/home/doug/cpp/basic",
		"/home/doug/Desktop/asciisec/data/1.shp",
		"/home/doug/cpp/basic.cpp",
		"/home/doug/cpp/a.out",
		"/home/doug/.config/sublime-text-3/Packages/User/CPlusPlusBuildandRun.sublime-build",
		"/home/doug/cpp/CPlusPlus.sublime-project",
		"/home/doug/cpp/untitled.cpp",
		"/home/doug/fifechan/dependencies/CMakeLists.txt",
		"/home/doug/Desktop/COMBOSB/Converted/SueBeck_9_6.xml",
		"/home/doug/Desktop/COMBOSB/SueBeck_7_4b.xml",
		"/home/doug/Desktop/COMBOSB/SueBeck_1_8.xml",
		"/home/doug/Desktop/COMBOSB/Converted/SueBeck_1_8.xml",
		"/home/doug/Desktop/COMBOSB/Converted/SueBeck_A_7.xml",
		"/home/doug/Dropbox/Sublime Text SVG Plugin/svgTree.pyc",
		"/home/doug/Dropbox/HTMLGrab/testing/ADDIT2.html",
		"/home/doug/Dropbox/HTMLGrab/htmlgrab.sublime-project",
		"/home/doug/Desktop/DEV.0/CHAPTER REVIEW 15/Learn 2.html",
		"/home/doug/Dropbox/HTMLGrab/htmlgrab.py",
		"/home/doug/Desktop/DEV.0/GRLIEQ2V/Learn 2.html",
		"/home/doug/Desktop/DEV.0/GRLIEQ2V/Learn 3.html",
		"/home/doug/Desktop/DEV.0/GRLIEQ2V/Learn 4.html",
		"/home/doug/Desktop/DEV.0/GRLIEQ2V/Learn 5.html",
		"/home/doug/Desktop/DEV.0/GRLIEQ2V/Learn 6.html",
		"/home/doug/Desktop/DEV.0/GRLIEQ2V/Learn 7.html",
		"/home/doug/Desktop/DEV.0/GRLIEQ2V/Learn 8.html",
		"/home/doug/Desktop/DEV.0/CHAPTER REVIEW 2/Learn 2.html",
		"/home/doug/Desktop/DEV.0/CHAPTER REVIEW 2/Learn 1.html",
		"/home/doug/Desktop/DEV.0/CHAPTER REVIEW 2/Learn 3.html",
		"/home/doug/Desktop/DEV.0/CHAPTER REVIEW 15/Learn 1.html",
		"/home/doug/Dropbox/HTMLGrab/testing/obj.html",
		"/home/doug/Dropbox/HTMLGrab/testing/bin.html",
		"/home/doug/Dropbox/HTMLGrab/testing/ANGLES.html",
		"/home/doug/Desktop/DEV.0/USCUST/Learn 19.html",
		"/home/doug/Dropbox/HTMLGrab/parsinhtml.py",
		"/home/doug/Dropbox/HTMLGrab/template.html",
		"/home/doug/Dropbox/HTMLGrab/test.py",
		"/home/doug/Dropbox/HTMLGrab/fulldoc3.html",
		"/home/doug/Dropbox/HTMLGrab/fulldoc5.html",
		"/home/doug/Dropbox/HTMLGrab/ANGLES/Learn 13.html",
		"/home/doug/Dropbox/HTMLGrab/ANGLES/Learn 12.html",
		"/home/doug/Dropbox/HTMLGrab/ANGLES/Learn 11.html",
		"/home/doug/Dropbox/HTMLGrab/ANGLES/Learn 10.html",
		"/home/doug/Dropbox/HTMLGrab/ANGLES/Learn 3.html",
		"/home/doug/Dropbox/HTMLGrab/fulldoc1.html",
		"/home/doug/Dropbox/HTMLGrab/ANGLES/Learn 2.html",
		"/home/doug/Dropbox/HTMLGrab/fulldoc0.html",
		"/home/doug/Dropbox/HTMLGrab/ANGLES0.html",
		"/home/doug/Dropbox/HTMLGrab/ANGLES.html",
		"/home/doug/Dropbox/HTMLGrab/ANGLES/Learn 5.html",
		"/home/doug/Dropbox/HTMLGrab/ANGLES/Learn 6.html",
		"/home/doug/Desktop/HTMLGrab/testing/Learn 1.html",
		"/home/doug/Desktop/HTMLGrab/testing/newthing.html",
		"/home/doug/Desktop/HTMLGrab/htmlgrab.py",
		"/home/doug/Desktop/HTMLGrab/test.py",
		"/home/doug/Desktop/HTMLGrab/testing/newfile.html",
		"/home/doug/.config/sublime-text-3/Packages/svgCreation/graphCreation.py",
		"/home/doug/Desktop/ReceptionLayout.html",
		"/home/doug/.config/sublime-text-3/Packages/svgCreation/cartesianGraph.py",
		"/home/doug/.config/sublime-text-3/Packages/svgCreation/svgTree.py",
		"/home/doug/Dropbox/Sublime Text SVG Plugin/testSVG.html",
		"/home/doug/.config/sublime-text-3/Packages/svgCreation/SVGcoordinates.py",
		"/home/doug/.config/sublime-text-3/Packages/svgCreation/angleDiagram.py",
		"/home/doug/Dropbox/Sublime Text SVG Plugin/imageClassesPseudo.txt",
		"/home/doug/Desktop/ideasforaccessibility.txt",
		"/home/doug/Desktop/Projects/Plugins.sublime-project",
		"/home/doug/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/doug/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/doug/.config/sublime-text-3/Packages/svgCreation/Default.sublime-commands",
		"/home/doug/Dropbox/Sublime Text SVG Plugin/svgparams.json",
		"/home/doug/.config/sublime-text-3/Packages/svgCreation/svgCreationPlugin.py",
		"/home/doug/Dropbox/Sublime Text SVG Plugin/testSVG",
		"/home/doug/Dropbox/Sublime Text SVG Plugin/svgCreation/graphCreation.py",
		"/home/doug/Dropbox/Sublime Text SVG Plugin/svgCreation/svgCreationPlugin.py",
		"/home/doug/.config/sublime-text-3/Packages/User/svgCreation.sublime-settings",
		"//quantsystems.com/RD/Shared Documents/Accessibility/Developing for Accessibility/Tools/svgparams.json",
		"/home/doug/Dropbox/Sublime Text SVG Plugin/svgCreation/angleDiagram.py",
		"/home/doug/Dropbox/Sublime Text SVG Plugin/svgCreation/cartesianGraph.py",
		"/home/doug/Dropbox/Sublime Text SVG Plugin/svgCreation/SVGcoordinates.py",
		"/home/doug/Dropbox/Sublime Text SVG Plugin/svgCreation/svgTree.py",
		"/home/doug/.config/sublime-text-3/Packages/svgCreation/numberLine.py",
		"/home/doug/Dropbox/Sublime Text SVG Plugin/LearnElementLibrary.svg",
		"/home/doug/Dropbox/Sublime Text SVG Plugin/graphCreation.py",
		"/home/doug/Dropbox/Sublime Text SVG Plugin/SVGcoordinates.py",
		"/home/doug/Dropbox/Sublime Text SVG Plugin/cartesianGraph.py",
		"/home/doug/Dropbox/Sublime Text SVG Plugin/testing.py",
		"/home/doug/.config/sublime-text-3/Packages/svgCreation/rayGeneration.py",
		"/home/doug/.config/sublime-text-3/Packages/User/testingPlugin.py",
		"/home/doug/Dropbox/Sublime Text SVG Plugin/svgCreation/svgCreation.sublime-settings",
		"/home/doug/.config/sublime-text-3/Packages/repository.json",
		"/home/doug/Dropbox/Sublime Text SVG Plugin/svgTree.py",
		"/home/doug/.config/sublime-text-3/Packages/xslTransformations/dependencies.json",
		"/home/doug/.config/sublime-text-3/Packages/User/Distraction Free.sublime-settings",
		"/home/doug/.config/sublime-text-3/Packages/User/JSON.sublime-settings",
		"/home/doug/.config/sublime-text-3/Packages/svgCreation/svgCreation.sublime-settings",
		"/home/doug/.config/sublime-text-3/Packages/testing/test.py",
		"/home/doug/.config/sublime-text-3/Packages/xslTransformations/Default.sublime-commands",
		"/home/doug/.config/sublime-text-3/Packages/xslTransformations/xsltTransformations.sublime-settings",
		"/home/doug/Dropbox/Sublime Text SVG Plugin/numberLine.py",
		"/home/doug/Dropbox/Sublime Text SVG Plugin/angleDiagram.py",
		"/home/doug/Dropbox/Sublime Text SVG Plugin/testSVG2.html",
		"/home/doug/.config/sublime-text-3/Packages/User/Default.sublime-commands",
		"/home/doug/.config/sublime-text-3/Packages/User/svgCreationPlugin.py",
		"/home/doug/Desktop/RegReplace/rr_plugin.py",
		"/home/doug/Desktop/RegReplace/rr_sequencer.py",
		"/home/doug/Dropbox/Python Course/BisectionSearch.py"
	],
	"find":
	{
		"height": 28.0
	},
	"find_in_files":
	{
		"height": 157.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 55.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 447.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Anaconda Python Builder",
	"project": "tdd.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Dropbox/ATXSLT/xslt.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 350.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
